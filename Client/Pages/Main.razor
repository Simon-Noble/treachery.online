<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@page "/"
@using Treachery.Shared;
@using Treachery.Client.GenericComponents;
@using Treachery.Client.OtherComponents;
@using Treachery.Client.MapComponents;
@using Microsoft.Extensions.Logging;

@inject NavigationManager NavigationManager
@inject ILogger<Index> logger
@inject IJSRuntime JSRuntime

@if (h.ServerSettings != null && h.ServerSettings.ScheduledMaintenance.AddMinutes(15) > DateTime.UtcNow &&
   (h.ServerSettings.ScheduledMaintenance.Subtract(DateTime.UtcNow).TotalHours < 8 && h.CurrentPhase <= Phase.AwaitingPlayers ||
    h.ServerSettings.ScheduledMaintenance.Subtract(DateTime.UtcNow).TotalHours < 1))
{
    <div class="alert alert-danger text-center p-0" role="alert">
        treachery.online will be down for maintenance from @h.ServerSettings.ScheduledMaintenance.ToLocalTime() until @h.ServerSettings.ScheduledMaintenance.AddMinutes(15).ToLocalTime()
    </div>
}

<div class="row">

    <!--Empty Column-->
    @if (h.IsObserver)
    {
        <div class="col-sm-1 col-lg-1 col-xl-1" />
    }

    <!--Map Column-->
    <div id="mapdiv" class="col-sm-12 col-lg-6">
        @if (h.HostProxy != null)
        {
            <Board h="h" OnLocationClick="@h.LocationClick"/>
        }
        else
        {
            <div class="text-center">
                <img src="@Skin.Current.Planet_URL" class="img-fluid" />
                <div class="alert alert-info" style="position:absolute; top:0px; left:0px; width:300px;">
                    <h4>CHOAM and Richese COMING SOON</h4>
                    <p class="">GaleForceNine's <a href="https://www.gf9games.com/dune/1139/choam-and-richese-coming-soon/" target="_blank">CHOAM and Richese Expansion</a> 
                        will hit the stores soon! After that it will also be added to treachery.online. You may download the expansion rulebook <a href="https://www.gf9games.com/dune/wp-content/uploads/2021/11/CHOAM-Rulebook-low-res.pdf" target="_blank">here</a>.</p>
                </div>
                <p class="text-light" style="font: @Skin.Current.GAMEVERSION_FONT">Version @Game.LatestVersion</p>
            </div>
        }
    </div>

    <!--Action Column-->
    @if (!h.IsObserver)
    {
        <div class="col-sm-12 col-lg-4 @Scrollbars">

            <MenuComponent h="@h" />

            @if (!h.IsConnected)
            {
                <div>Disconnected...</div>
            }
            else if (h.PlayerName == "")
            {
                <PlayerNameComponent h="@h" />
            }
            else if (h.HostProxy == null && h.Host == null)
            {
                <HostOrJoinGameComponent h="@h" />
            }
            else
            {
                <GameStatusComponent h="@h" CanEndPhase="h.Actions.Contains(typeof(EndPhase))" />

                @if (h.CurrentPhase == Phase.GameEnded)
                {
                    <WinnerPanel h="h" />
                }

                <ActionPanel h="@h" />
            }

        </div>
    }

    <!--Information Column-->
    <div class="col-sm-12 cursor-hand @InformationSize @Scrollbars">

        @if (h.IsObserver)
        {
            <MenuComponent h="@h" />
        }

        @if (!h.IsObserver && h.Player.Faction != Faction.None)
        {
            <PlayerPanel h="h" ShownPlayer="h.Player" />
        }
        else if (h.IsObserver)
        {
            <GameStatusComponent h="@h" />

            @if (h.CurrentPhase == Phase.GameEnded)
            {
                <WinnerPanel h="h" />
            }

            @if (h.Game.CurrentMainPhase == MainPhase.Bidding)
            {
                <BiddingPanel h="h" />
            }
        }

        @if (h.Game.CurrentReport != null)
        {
            <ReportComponent h="@h" Report="h.Game.CurrentReport" Title="@h.Game.CurrentReport.Title" />
        }

        @if (!h.IsObserver && h.Player.Faction == Faction.None && h.CurrentPhase > Phase.TradingFactions)
        {
            foreach (Player p in h.Game.Players)
            {
                <PlayerPanel h="h" ShownPlayer="p" ShowHeader="true" />
            }
        }

    </div>

    <!--Global Components-->

    @if ((!h.IsObserver || h.PlayerName == h.ServerSettings.AdminName) && h.CurrentPhase > Phase.AwaitingPlayers)
    {
        <ChatComponent h="@h" />
    }

    @if (h.CurrentPhase == Phase.GameEnded || h.CurrentPhase == Phase.BattleConclusion)
    {
        <WinnerFlashComponent h="@h" />
    }

    <ImageFlashComponent h="@h" />

    <!--Empty Column-->
    @if (h.IsObserver)
    {
        <div class="col-sm-1 col-lg-1 col-xl-1" />
    }

</div>

@code {

    private Handler h;

    protected override async Task OnInitializedAsync()
    {
        Browser.Initialize(JSRuntime);
        h = new Handler(NavigationManager.ToAbsoluteUri("/gameHub"), logger);
        await h.Start();
        h.RefreshHandler += Refresh;
        await LoadSkinDataIfSaved();
    }

    private bool isFullscreen = false;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var checkFullscreen = await Browser.IsFullScreen();
        if (isFullscreen != checkFullscreen)
        {
            isFullscreen = checkFullscreen;
            StateHasChanged();
        }
        else
        {
            await Browser.SetPlanetMapScale();
            await Browser.EnablePopovers();
        }
    }

    private async Task LoadSkinDataIfSaved()
    {
        var existingSkinData = await Browser.LoadStringSetting("treachery.online;setting.skin");
        if (existingSkinData != null && existingSkinData.Length > 0)
        {
            var existingSkin = Support.LoadSkin(existingSkinData);

            if (existingSkin.Version >= Skin.CurrentVersion)
            {
                var issues = await existingSkin.ValidateAndFix(Browser.UrlExists);
                Skin.Current = existingSkin;
            }
        }
    }

    public void Refresh()
    {
        StateHasChanged();
    }

    private string InformationSize => h.IsObserver ? "col-lg-4" : "col-lg-2";

    private string Scrollbars => isFullscreen? "vh-100 overflow-auto" : "";
}
