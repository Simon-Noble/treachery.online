@using Treachery.Shared;
@inherits MapComponent;


@for (int i = 0; i < Amount; i++)
{
    <Image X=@(X - i - Skin.Current.FORCETOKEN_RADIUS) Y=@(Y - i - Skin.Current.FORCETOKEN_RADIUS) Diameter=@Diameter Src="@ForceURL" 
            ShadowColor="@Skin.Current.SHADOW" ShadowX="1" ShadowY="1" ShadowBlur="0"
            Popover="@Popover"/>
}

@if (!(Faction == Faction.White && Special))
{
    <MapText ToShow="@Amount.ToString()" X=@(X+1) Y=@Y Font=@Skin.Current.FORCETOKEN_FONT BorderWidth=@Skin.Current.FORCETOKEN_FONT_BORDERWIDTH BorderColor=@Skin.Current.FORCETOKEN_FONT_BORDERCOLOR/>
}

@code {

    [Parameter]
    public bool Special { get; set; } = false;

    [Parameter]
    public int Amount { get; set; }

    [Parameter]
    public Faction Faction { get; set; }

    [Parameter]
    public bool Threatened { get; set; } = false;

    [Parameter]
    public bool ShowPopover { get; set; } = true;

    protected override void OnInitialized()
    {
        Diameter = 2 * Skin.Current.FORCETOKEN_RADIUS;
    }

    private string ForceURL => Special ? Skin.Current.GetFactionSpecialForceImageURL(Faction) : Skin.Current.GetFactionForceImageURL(Faction);

    private string Popover => ShowPopover ? string.Format("<img style='float:left' src='{0}' width=100/><h3 style='float:right'>{1}</h3>", ForceURL, Amount) : null;
}
