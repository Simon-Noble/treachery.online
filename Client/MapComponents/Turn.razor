@using Treachery.Shared
@inherits MapComponent

@if (Game.CurrentTurn >= 1)
{
    <MapText ToShow="@string.Format("Turn {0} of {1}", h.Game.CurrentTurn, h.Game.MaximumNumberOfTurns)"
             X="@(Skin.Current.PlanetCenter.X)"
             Y="@fontHeight"
             Font="@Skin.Current.TURN_FONT"
             FontColor="@Skin.Current.TURN_FONT_COLOR"
             BorderWidth="@Skin.Current.TURN_FONT_BORDERWIDTH"
             BorderColor="@Skin.Current.TURN_FONT_BORDERCOLOR"
             Align="@TextAlignment.Center"/>
}

@if (h.Host != null && h.Host.JoinedObservers.Count(o => o != "$RonaldAdmin$") > 0)
{
    <MapText ToShow="@string.Format("observers: {0}", Observers.Count())"
             X="@(Skin.Current.PlanetCenter.X)"
             Y="@(Skin.Current.MapDimensions.Y - fontHeight)"
             Popover="@ObserverPopover"
             Font="@Skin.Current.FORCETOKEN_FONT"
             FontColor="@Skin.Current.TURN_FONT_COLOR"
             BorderWidth="@Skin.Current.FORCETOKEN_FONT_BORDERWIDTH"
             BorderColor="@Skin.Current.FORCETOKEN_FONT_BORDERCOLOR"
             Align="@TextAlignment.Center"/>
}

@code {
    
    private string ObserverPopover => string.Join(", ", Observers);

    private IEnumerable<string> Observers => h.Host.JoinedObservers.Where(o => o != "$RonaldAdmin$");

    private float fontHeight;

    protected override async Task OnInitializedAsync()
    {
        fontHeight = (await Browser.MeasureText("Turn", Skin.Current.TURN_FONT)).Height;
    }
}