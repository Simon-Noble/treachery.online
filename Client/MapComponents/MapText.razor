@inherits MapComponent

<span style="position: absolute; white-space: nowrap; left: @Px(AlignedX); top: @Px(Y-TextHeight-45); pointer-events: none; user-select: none; font: @Font; color: @FontColor; max-width: @Px(MaxWidth); -webkit-text-stroke-width: @Px(BorderWidth); -webkit-text-stroke-color: @BorderColor;">
    @ToShow
</span>

@code {

    [Parameter]
    public string ToShow { get; set; }

    [Parameter]
    public string Font { get; set; }

    [Parameter]
    public string FontColor { get; set; } = "white";

    [Parameter]
    public int BorderWidth { get; set; } = 0;

    [Parameter]
    public string BorderColor { get; set; } = "black";

    [Parameter]
    public TextAlignment Align { get; set; } = TextAlignment.Left;

    [Parameter]
    public float MaxWidth { get; set; } = 4096;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private float TextWidth;
    private float TextHeight;
    private float AlignedX;
    protected override async Task OnParametersSetAsync()
    {
        var textDimensions = await Browser.MeasureText(ToShow, Font);

        TextWidth = textDimensions.Width;
        TextHeight = textDimensions.Height;

        AlignedX = Align switch
        {
            TextAlignment.Center => X - 0.5f * TextWidth,
            TextAlignment.Right => X - TextWidth,
            _ => X
        };
    }
}
