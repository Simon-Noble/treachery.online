@using Treachery.Shared

<div id="planetmap" style="position: absolute; left: 0px; transform: scale(0.2)">

    <div style="position:absolute; width:@Px(Skin.Current.MapDimensions.X); height:@Px(Skin.Current.MapDimensions.Y);">

        <Image X="0" Y="0" Width=@Skin.Current.MapDimensions.X Height=@Skin.Current.MapDimensions.Y Src=@Skin.Current.Map_URL/>

        @if (h.Game.CurrentPhase > Phase.AwaitingPlayers)
        {
        <div style="width:100%; height:100%;">

            <ShieldWall h="h" />
            <SSW h="h" />
            <Turn h="h" />
            <ResourcesOnPlanet h="h" />
            <Monsters h="h" />
            <StormAndStormPrescience h="h" />
            <Phases h="h" />
            <Highlights h="h" />
            <Players h="h" />
            <HMS h="h" />
            <StrongholdOwnership h="h" />
            <RecentMoves h="h" />
            <ForcesOnPlanet h="h" />
            <Bids h="h" />
            <Tanks h="h" />
            <CardPiles h="h" />
            <Disconnection h="h" />

            @foreach (var l in h.Game.Map.Locations)
            {
                <Location h="@h" ToShow="l" FillColor="transparent" FillOpacity="0" OnLocationClick="@OnLocationClick" />
            }

            <BattlePlans h="h" />
            <Options h="h" />

        </div>
        }

    </div>

</div>

@code {

    [Parameter]
    public Handler h { get; set; }

    [Parameter]
    public EventCallback<LocationEventArgs> OnLocationClick { get; set; }

    [Parameter]
    public EventCallback<TerritoryEventArgs> OnTerritoryClick { get; set; }

    private string Px(float x) => x + "px";
}
