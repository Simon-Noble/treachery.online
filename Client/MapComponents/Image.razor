<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@inherits MapComponent
@implements IDisposable;

@if (Popover != null)
{
    <img @ref=@element @onclick="@OnClick" @onmouseover="@OnMouseOver" @onmouseout="@OnMouseExited" title="@Title" style="@Style" src=@Src 
        data-bs-trigger="hover" data-bs-toggle="popover" data-bs-html="true" data-bs-animation="false" data-bs-delay="50" data-container="body" data-bs-content="@Popover" data-bs-template="@PopoverTemplate" />
}
else
{
    <img @ref=@element @onclick="@OnClick" @onmouseover="@OnMouseOver" @onmouseout="@OnMouseExited" title="@Title" style="@Style" src=@Src />
}

@code {

    [Parameter]
    public string Src { get; set; }

    [Parameter]
    public float ShadowX { get; set; } = 0;

    [Parameter]
    public float ShadowY { get; set; } = 0;

    [Parameter]
    public float ShadowBlur { get; set; } = 0;

    [Parameter]
    public string ShadowColor { get; set; } = "black";

    [Parameter]
    public string Title { get; set; } = "";

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnMouseOver { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnMouseExited { get; set; }

    [Parameter]
    public string Popover { get; set; } = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && Popover != null)
        {
            await Browser.EnablePopovers(element);
        }
    }

    private string Style
    {
        get
        {
            var result = string.Format("position:absolute;left:{0};top:{1};width:{2};height:{3};opacity:{4};", Px(X), Px(Y), Px(Width), Px(Height), Round(Opacity));

            if (OnClick.HasDelegate || OnMouseOver.HasDelegate || Popover != null)
            {
                result += "cursor:pointer;pointer-events:all;";
            }
            else
            {
                result += "pointer-events:none;";
            }

            if (ShadowX > 0 || ShadowY > 0)
            {
                result += string.Format("filter:drop-shadow({0} {1} {2} {3});", Px(ShadowX), Px(ShadowY), Px(ShadowBlur), ShadowColor);
            }

            return result;
        }
    }

    public void Dispose()
    {
        if (Popover != null)
        {
            _ = Browser.RemovePopovers(element);
        }
    }
}
