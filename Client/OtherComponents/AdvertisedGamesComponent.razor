<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared;
@using Treachery.Client.GenericComponents;
@inherits GameComponent;
@inject IJSRuntime JSRuntime;

<HoverPanel Height=300 HandleWidth=24 BackgroundColor="#e8dba6dd" Position="HoverPanel.HoverPanelPosition.Top">

    <div class="p-2">

        @foreach (var g in h.JoinableAdvertisedGames)
        {
            if (!joinPWD.ContainsKey(g.HostID))
            {
                joinPWD.Add(g.HostID, "");
            }

            if (!h.JoinErrors.ContainsKey(g.HostID))
            {
                h.JoinErrors.Add(g.HostID, "");
            }

            <div class="alert alert-primary" role="alert">
                You are welcome to join @g.GameName (@g.Players.Count() human players, @Skin.Current.Describe(Game.DetermineApproximateRuleset(g.FactionsInPlay, g.Rules)), maximum players: @g.MaximumNumberOfPlayers, maximum turns: @g.MaximumNumberOfTurns!
            </div>
        }

    </div>

</HoverPanel>

@code {

    private Dictionary<int, string> joinPWD = new Dictionary<int, string>();

    private async Task JoinGameAsPlayer(int hostID, string pwd)
    {
        h.JoinErrors[hostID] = "";
        await h.Request(hostID, new PlayerJoined() { HashedPassword = Support.GetHash(pwd), Name = h.PlayerName });
    }
}