<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared;
@using Treachery.Client.GenericComponents;
@inherits GameComponent;

<ModalComponent Id="@Id" Title="Card Reference" Size="modal-xl">

    <h5>Treachery Cards</h5>
    <div class="row row-cols-3 row-cols-md-6 ml-0 mr-0">

        @foreach (var v in TreacheryCardManager.GetCardsInPlay(h.Game))
        {
            <div class="card">
                <div class="card-img-top" data-animation="true" data-content="@Support.GetTreacheryCardHoverHTML(v)" data-html="true" data-placement="top" data-trigger="hover" data-toggle="popover">
                    <img src="@Skin.Current.GetImageURL(v)" class="card-img" alt="@(v.Name)">
                </div>
            </div>
        }

    </div>

    @if (h.Game.IsPlaying(Faction.White))
    {
        <h5 class="mt-2">@Skin.Current.Describe(Faction.White) Cards</h5>
        <div class="row row-cols-3 row-cols-md-6 ml-0 mr-0">

            @foreach (var v in TreacheryCardManager.GetWhiteCards())
            {
                <div class="card">
                    <div class="card-img-top" data-animation="true" data-content="@Support.GetTreacheryCardHoverHTML(v)" data-html="true" data-placement="top" data-trigger="hover" data-toggle="popover">
                        <img src="@Skin.Current.GetImageURL(v)" class="card-img" alt="@(v.Name)">
                    </div>
                </div>
            }

        </div>
    }

    <h5 class="mt-2">@Skin.Current.Describe(Concept.Resource) Cards</h5>
    <div class="row row-cols-3 row-cols-md-6 ml-0 mr-0">

        @foreach (var v in Map.GetResourceCardsInPlay(h.Game))
        {
            <div class="card">
                <div class="card-img-top" data-animation="true" data-content="@Support.GetResourceCardHoverHTML(v)" data-html="true" data-placement="top" data-trigger="hover" data-toggle="popover">
                    <img src="@Skin.Current.GetImageURL(v)" class="card-img" alt="@(v.ToString())">
                </div>
            </div>
        }

    </div>

    @if (h.Game.Applicable(Rule.LeaderSkills))
    {
        <h5 class="mt-2">Leader Skill Cards</h5>
        <div class="row row-cols-3 row-cols-md-6 ml-0 mr-0">

            @foreach (var v in Enumerations.GetValuesExceptDefault(typeof(LeaderSkill), LeaderSkill.None))
            {
                <div class="card">
                    <div class="card-img-top" data-animation="true" data-content="@Support.GetSkillCardHoverHTML(v)" data-html="true" data-placement="top" data-trigger="hover" data-toggle="popover">
                        <img src="@Skin.Current.GetImageURL(v)" class="card-img" alt="@(v.ToString())">
                    </div>
                </div>
            }

        </div>
    }

    @if (h.Game.Applicable(Rule.StrongholdBonus))
    {
        <h5 class="mt-2">Stronghold Cards</h5>
        <div class="row row-cols-3 row-cols-md-6 ml-0 mr-0">

            @foreach (var v in h.Game.Map.Strongholds)
            {
                <div class="card">
                    <div class="card-img-top" data-animation="true" data-content="@Support.GetStrongholdHTML(v)" data-html="true" data-placement="top" data-trigger="hover" data-toggle="popover">
                        <img src="@Skin.Current.GetImageURL(v)" class="card-img" alt="@(v.ToString())">
                    </div>
                </div>
            }

        </div>
    }

</ModalComponent>

@code {

    [Parameter]
    public new string Id { get; set; } = "";
}