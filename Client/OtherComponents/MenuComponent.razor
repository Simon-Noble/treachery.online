<!--
 * Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameComponent

<div class="row m-0 d-flex justify-content-center" style="animation:fadeIn 1s;">

    @if (Client.HostProxy == null)
    {
        <div class="col col-xs-auto p-0">
        <a class="btn btn-link p-1" href="https://discord.gg/rRGEfn4" target="_blank" title="Use Discord to organize and join matches">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-people-fill" viewBox="0 0 16 16">
                <path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z" />
                <path fill-rule="evenodd" d="M5.216 14A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216z" />
                <path d="M4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z" />
            </svg>
        </a>
        </div>
    }

    @if (Client.Game.EventCount > 0)
    {
        if (Client.Host != null || Client.PlayerName == Client.ServerSettings.AdminName)
        {
            <div class="col col-xs-auto p-0">
            <a class="btn btn-link p-1" title="Save game..." @onclick="Save">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-file-earmark-arrow-down" viewBox="0 0 16 16">
                    <path d="M8.5 6.5a.5.5 0 0 0-1 0v3.793L6.354 9.146a.5.5 0 1 0-.708.708l2 2a.5.5 0 0 0 .708 0l2-2a.5.5 0 0 0-.708-.708L8.5 10.293V6.5z" />
                    <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2zM9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5v2z" />
                </svg>
            </a>
            </div>
        }

        if (!Client.IsObserver && Client.Host != null)
        {
            <div class="col col-xs-auto p-0">
            <label class="btn btn-link p-1" title="Load game...">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-file-earmark-arrow-up" viewBox="0 0 16 16">
                    <path d="M8.5 11.5a.5.5 0 0 1-1 0V7.707L6.354 8.854a.5.5 0 1 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 7.707V11.5z" />
                    <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2zM9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5v2z" />
                </svg>
                <input hidden type="file" id="fileInput" @ref="_fileInput" @onchange="LoadGame" />
            </label>
            </div>

            <div class="col col-xs-auto p-0">
            <label class="btn btn-link p-1" title="Apply skin...">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-palette" viewBox="0 0 16 16">
                    <path d="M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z" />
                    <path d="M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8zm-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7z" />
                </svg>
                <input hidden type="file" id="skinInput" @ref="_skinInput" @onchange="LoadSkin" />
            </label>
            </div>

            @if (Client.Game.Players.Any(p => p.IsBot))
            {
                <div class="col col-xs-auto p-0">
                    @if (Client.BotsArePaused)
                    {
                        <a class="btn btn-link p-1" @onclick="e => Client.ToggleBotPause()" title="Unpause Bots">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-play-fill" viewBox="0 0 16 16">
                                <path d="m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z" />
                            </svg>
                        </a>
                    }
                    else
                    {
                        <a class="btn btn-link p-1" @onclick="e => Client.ToggleBotPause()" title="Pause Bots">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-pause-fill" viewBox="0 0 16 16">
                                <path d="M5.5 3.5A1.5 1.5 0 0 1 7 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5zm5 0A1.5 1.5 0 0 1 12 5v6a1.5 1.5 0 0 1-3 0V5a1.5 1.5 0 0 1 1.5-1.5z" />
                            </svg>
                        </a>
                    }
                </div>
            }

            @if (Client.Game.EventCount > 1)
            {
                <div class="col col-xs-auto p-0">
                <a class="btn btn-link p-1" @onclick="e => SetVisible(HOST)" title="Undo">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-skip-backward" viewBox="0 0 16 16">
                        <path d="M.5 3.5A.5.5 0 0 1 1 4v3.248l6.267-3.636c.52-.302 1.233.043 1.233.696v2.94l6.267-3.636c.52-.302 1.233.043 1.233.696v7.384c0 .653-.713.998-1.233.696L8.5 8.752v2.94c0 .653-.713.998-1.233.696L1 8.752V12a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5zm7 1.133L1.696 8 7.5 11.367V4.633zm7.5 0L9.196 8 15 11.367V4.633z" />
                    </svg>
                </a>
                </div>
            }
        }
    }

    <div class="col col-xs-auto p-0">
    <a class="btn btn-link p-1" @onclick="e => SetVisible(HELP)" title="Help">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-info-circle" viewBox="0 0 16 16">
            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
            <path d="M8.93 6.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z" />
        </svg>
    </a>
    </div>

    <div class="col col-xs-auto p-0">
    <a class="btn btn-link p-1" @onclick="e => SetVisible(VOLUME)" title="Adjust music and sound volume">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-music-note-beamed" viewBox="0 0 16 16">
            <path d="M6 13c0 1.105-1.12 2-2.5 2S1 14.105 1 13c0-1.104 1.12-2 2.5-2s2.5.896 2.5 2zm9-2c0 1.105-1.12 2-2.5 2s-2.5-.895-2.5-2 1.12-2 2.5-2 2.5.895 2.5 2z" />
            <path fill-rule="evenodd" d="M14 11V2h1v9h-1zM6 3v10H5V3h1z" />
            <path d="M5 2.905a1 1 0 0 1 .9-.995l8-.8a1 1 0 0 1 1.1.995V3L5 4V2.905z" />
        </svg>
    </a>
    </div>

    <div class="col col-xs-auto p-0">
    <a class="btn btn-link p-1" href="https://trello.com/invite/b/fTA2ujGp/aa7a44ca48cf5fd8e9c41ee838b7d5be/treachery-online" target="_blank" title="Report a bug or suggest improvements">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-bug" viewBox="0 0 16 16">
            <path d="M4.355.522a.5.5 0 0 1 .623.333l.291.956A4.979 4.979 0 0 1 8 1c1.007 0 1.946.298 2.731.811l.29-.956a.5.5 0 1 1 .957.29l-.41 1.352A4.985 4.985 0 0 1 13 6h.5a.5.5 0 0 0 .5-.5V5a.5.5 0 0 1 1 0v.5A1.5 1.5 0 0 1 13.5 7H13v1h1.5a.5.5 0 0 1 0 1H13v1h.5a1.5 1.5 0 0 1 1.5 1.5v.5a.5.5 0 1 1-1 0v-.5a.5.5 0 0 0-.5-.5H13a5 5 0 0 1-10 0h-.5a.5.5 0 0 0-.5.5v.5a.5.5 0 1 1-1 0v-.5A1.5 1.5 0 0 1 2.5 10H3V9H1.5a.5.5 0 0 1 0-1H3V7h-.5A1.5 1.5 0 0 1 1 5.5V5a.5.5 0 0 1 1 0v.5a.5.5 0 0 0 .5.5H3c0-1.364.547-2.601 1.432-3.503l-.41-1.352a.5.5 0 0 1 .333-.623zM4 7v4a4 4 0 0 0 3.5 3.97V7H4zm4.5 0v7.97A4 4 0 0 0 12 11V7H8.5zM12 6a3.989 3.989 0 0 0-1.334-2.982A3.983 3.983 0 0 0 8 2a3.983 3.983 0 0 0-2.667 1.018A3.989 3.989 0 0 0 4 6h8z" />
        </svg>
    </a>
    </div>

    <div class="col col-xs-auto p-0">
    <a class="btn btn-link p-1" @onclick="ToggleFullScreen" title="Toggle Fullscreen">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-fullscreen" viewBox="0 0 16 16">
            <path d="M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z" />
        </svg>
    </a>
    </div>

    @if (Client.HostProxy != null)
    {
        <div class="col col-xs-auto p-0">
        <a class="btn btn-link p-1" @onclick="e => SetVisible(RESTART)" title="Exit Game">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-box-arrow-left" viewBox="0 0 16 16">
              <path fill-rule="evenodd" d="M6 12.5a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-9a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v2a.5.5 0 0 1-1 0v-2A1.5 1.5 0 0 1 6.5 2h8A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-8A1.5 1.5 0 0 1 5 12.5v-2a.5.5 0 0 1 1 0v2z"/>
              <path fill-rule="evenodd" d="M.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L1.707 7.5H10.5a.5.5 0 0 1 0 1H1.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3z"/>
            </svg>
        </a>
        </div>
    }
        
    <div class="col col-xs-auto p-0">
        <form action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_blank" class="form-group form-inline mt-1 mb-0 p-0">
            <input type="hidden" name="cmd" value="_s-xclick" />
            <input type="hidden" name="hosted_button_id" value="X6BLRPXHX7HDQ" />
            <input type="image" src="art/donate.svg" border="0" height="28" name="submit" title="Donate CHOAM Charity using PayPal" alt="Donate CHOAM Charity using PayPal button" />
        </form>
    </div>

</div>

<div class="text-danger small">@_loadValidationError</div>
@if (_loadValidationError != "")
{
    <button class="btn btn-primary mt-1 btn-sm" @onclick="ClearValidationErrors">Clear errors</button>
}

@if (IsVisible(HOST))
{
    <UndoComponent Client="@Client" />
}
else if (IsVisible(HELP))
{
    <div class="card p-1 mb-2">
        <div class="card-body text-center">

            @if (Client.HostProxy != null)
            {
                <button class="btn btn-primary mt-1 me-1" data-bs-toggle="modal" data-bs-target="#mentatModal">List of Cards</button>
            }

            <a class="btn btn-primary mt-1" href="https://www.gf9games.com/dunegame/wp-content/uploads/Dune-Rulebook.pdf" target="_blank">Dune Rulebook</a>
            <a class="btn btn-primary mt-1" href="https://www.gf9games.com/dunegame/wp-content/uploads/2020/09/IxianAndTleilaxuRulebook.pdf" target="_blank">Ixian & Tleilaxu Rulebook</a>
            <a class="btn btn-primary mt-1" href="https://www.gf9games.com/dune/wp-content/uploads/2021/11/CHOAM-Rulebook-low-res.pdf" target="_blank">CHOAM & Richese Rulebook</a>
            <a class="btn btn-primary mt-1" href="https://www.gf9games.com/dune/wp-content/uploads/EcazMoritani-Rulebook-LOWRES.pdf" target="_blank">Ecaz & Moritani Rulebook</a>
            <a class="btn btn-primary mt-1" href="https://www.gf9games.com/dune/wp-content/uploads/2020/11/Dune-FAQ-Nov-2020.pdf" target="_blank">Dune FAQ</a>

            <a class="btn btn-primary mt-1" href="https://www.gf9games.com/dune/classic-dune/" target="_blank">Buy boardgame from GF9</a>
            <button class="btn btn-primary mt-1" data-bs-toggle="modal" data-bs-target="#tutorialModal">Tutorial: how to play</button>
            <a class="btn btn-primary mt-1" href="https://dune.games" target="_blank">Dune Dashboard</a>
            <button class="btn btn-primary mt-1" data-bs-toggle="modal" data-bs-target="#creditModal">Credits</button>
        </div>
    </div>
}
else if (IsVisible(RESTART))
{
    <div class="card p-1 mb-2">
        <div class="card-body text-center">
            <p class="text-warning mb-1">Are you sure you wish to exit this game and go back to the main screen?</p>
            <button class="btn btn-danger mt-1 me-1" @onclick="RestartGame">Yes</button>
            <button class="btn btn-primary mt-1" @onclick="e => SetVisible(null)">No</button>
        </div>
    </div>
}

<MusicComponent Client="@Client" Visible="IsVisible(VOLUME)" />
<MentatComponent Id="mentatModal" Client="@Client" />
<CreditComponent Id="creditModal" />
<TutorialComponent Id="tutorialModal" />

@code {

    private string _loadValidationError = "";
    public object _fileInput;
    public object _skinInput;

    private const string HOST = "host";
    private const string HELP = "help";
    private const string VOLUME = "volume";
    private const string RESTART = "restart";

    private const int MAX_SAVEGAME_SIZE = 4194304;
    private const int MAX_SKINFILE_SIZE = 262144;

    [Parameter]
    public object Visible { get; set; } = null;

    private void RestartGame()
    {
        SetVisible(RESTART);
        Client.Reset();
        Client.Refresh();
    }

    private void SetVisible(object o)
    {
        if (Visible == o)
        {
            Visible = null;
        }
        else
        {
            Visible = o;
        }
    }

    private bool IsVisible(object o)
    {
        return (o == Visible);
    }

    private async Task ToggleFullScreen()
    {
        await Browser.ToggleFullScreen();
        await Task.Delay(2000).ContinueWith(e => Client.Refresh());
    }

    private async Task Save()
    {
        var stateData = GameState.GetStateAsString(Client.Game);
        await Browser.Save("savegame.json", stateData);
    }

    private async Task LoadGame()
    {
        try
        {

            _loadValidationError = "";
            var data = await Browser.LoadFile(_fileInput);
            await Browser.ClearFileInput("fileInput");

            if (data.Length < MAX_SAVEGAME_SIZE)
            {
                var state = GameState.Load(data);

                if (state.Version > 0)
                {
                    var result = Game.TryLoad(state, true, true, out Game game);

                    if (result != null)
                    {
                        _loadValidationError = string.Format("Error loading game ({0})", result.ToString(Skin.Current));
                    }
                    else
                    {
                        await Client.Host.LoadGame(data, game);
                    }
                }
                else
                {
                    _loadValidationError = "Invalid savegame file....";
                }
            }
            else
            {
                _loadValidationError = "Savegame file is too big...";
            }
        }
        catch (Exception e)
        {
            _loadValidationError = string.Format("Error loading game ({0})", e.Message);
        }
    }

    private async Task LoadSkin()
    {
        try
        {
            _loadValidationError = "";
            var data = await Browser.LoadFile(_skinInput);
            await Browser.ClearFileInput("skinInput");

            if (data.Length < MAX_SKINFILE_SIZE)
            {
                var newSkin = Skin.Load(data);
                await Client.Host.LoadSkin(newSkin.SkinToString());
            }
            else
            {
                _loadValidationError = "Skin file is too big...";
            }
        }
        catch (Exception e)
        {
            _loadValidationError = string.Format("Error loading skin ({0})", e.Message);
        }
    }

    private void ClearValidationErrors()
    {
        _loadValidationError = "";
    }
}
