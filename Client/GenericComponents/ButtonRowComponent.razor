<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared;

<div class="mt-2 @Alignment">

    @if (Other.HasDelegate)
    {
        <button class="btn btn-primary me-1" @onclick="Other" disabled=@Disabled>@OtherText</button>
    }

    @if (Pass.HasDelegate)
    {
        <button class="btn btn-primary me-1" @onclick="Pass" disabled=@Disabled>@PassText</button>
    }

    @if (Confirm.HasDelegate)
    {
        <button class="btn btn-primary" @onclick="Confirm" disabled=@(Disabled || ConfirmError != null)>@ConfirmText</button>
    }

</div>

@if (ConfirmError != null)
{
    <div class="ms-0 mt-0 mb-1 me-0 text-danger @Alignment"><span class="bg-dark">@ConfirmError.ToString(Skin.Current)</span></div>
}

@code {

    [Parameter]
    public EventCallback Confirm { get; set; }

    [Parameter]
    public string ConfirmText { get; set; } = "Confirm";

    [Parameter]
    public Message ConfirmError { get; set; } = null;

    [Parameter]
    public EventCallback Pass { get; set; }

    [Parameter]
    public string PassText { get; set; } = "Pass";

    [Parameter]
    public EventCallback Other { get; set; }

    [Parameter]
    public string OtherText { get; set; } = "Other";

    [Parameter]
    public string Alignment { get; set; } = "text-end";

    [Parameter]
    public bool Disabled { get; set; } = false;
}
