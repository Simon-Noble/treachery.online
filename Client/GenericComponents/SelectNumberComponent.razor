<!--
 * Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

<div class="d-flex align-items-center">

    @if (Label != "")
    {
        <label class="me-1">@Label</label>
    }
    
    <NumberPickerComponent Disabled="@Disabled" @bind-Value=@Value OnChanged=Notify Min="Min" Max="Max" StepUp=StepUp StepDown=StepDown 
        SymbolBackgroundFillColor="white" SymbolBackgroundBorderColor="black" Size=Size />

</div>

@code {

    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> OnChanged { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    [Parameter]
    public int Min { get; set; }

    [Parameter]
    public int Max { get; set; }

    [Parameter]
    public int StepUp { get; set; } = 1;

    [Parameter]
    public int StepDown { get; set; } = 1;

    [Parameter]
    public string Label { get; set; } = "";

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public int Size { get; set; } = 36;

    private async Task Notify() {

        await ValueChanged.InvokeAsync(Value);
        await OnChanged.InvokeAsync(Value);
    }
}
