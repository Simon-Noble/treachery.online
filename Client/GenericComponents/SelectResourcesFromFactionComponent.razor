<!--
 * Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared;

<div class="@Class">

    @if (Label != "")
    {
        <label class="me-1">@Label</label>
    }

    <NumberPickerComponent Disabled="@Disabled" @bind-Value="Value" OnChanged="@Notify"
        Min="Min" Max="Max" Title=@Title SymbolSRC="@Skin.Current.GetImageURL(Faction)" SymbolBackgroundFillColor="white" SymbolBackgroundBorderColor="#FF5400" 
        NumberAlignment="NumberAlignment.BottomRight" NumberBackgroundFillColor="white" NumberBackgroundBorderColor="#FF5400" BehindNumberSRC="@Skin.Current.Harvester_URL"/>
</div>

@code {

    [Parameter]
    public int Value { get; set; }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    [Parameter]
    public EventCallback<int> OnChanged { get; set; }

    [Parameter]
    public EventCallback OnUp { get; set; }

    [Parameter]
    public EventCallback OnDown { get; set; }

    [Parameter]
    public int Min { get; set; }

    [Parameter]
    public int Max { get; set; }

    [Parameter]
    public string Label { get; set; } = "";

    [Parameter]
    public string Title { get; set; } = "";

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public Faction Faction { get; set; } = Faction.None;

    [Parameter]
    public string Class { get; set; } = "d-inline-flex align-items-center";

    private async Task Notify() {

        await ValueChanged.InvokeAsync(Value);
        await OnChanged.InvokeAsync(Value);
    }
}
