<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared;

<div class="card @Width @Border mb-2" style="@BackgroundStyle">

    <div class="card-header" style="@HeaderStyle">

        @if (Collapsible)
        {
            <CollapseButton @bind-Collapsed="Collapsed" />
        }

        @Header

    </div>

    @if (!Collapsible || !Collapsed)
    {
        <div class="card-body" style="@BodyStyle">
            @Body
        </div>
    }

</div>

@code {

    [Parameter]
    public bool IsUrgent { get; set; }

    [Parameter]
    public string Width { get; set; } = "";

    [Parameter]
    public string BackgroundStyle { get; set; }

    [Parameter]
    public string HeaderStyle { get; set; }

    [Parameter]
    public string BodyStyle { get; set; }

    [Parameter]
    public RenderFragment Header { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public bool Collapsible { get; set; } = true;

    private bool _collapsed  = false;

    [Parameter]
    public bool Collapsed
    {
        get
        {
            return _collapsed;
        }
        set
        {

            if (_collapsed != value)
            {
                _collapsed = value;
                CollapsedChanged.InvokeAsync(value);
            }
        }
    }

    [Parameter]
    public EventCallback<bool> CollapsedChanged { get; set; }

    [Parameter]
    public GameEvent TimedEvent { get; set; } = null;

    private string Border => IsUrgent ? "border-white" : "";
}
