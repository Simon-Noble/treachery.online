<div class="card p-1 mb-2 @Border" style="@BackgroundStyle">

    <div class="card-header" style="@HeaderStyle">
        @Header

        @if (Collapsible)
        {
            <CollapseButton @bind-Collapsed="Collapsed" />
        }

    </div>

    @if (!Collapsible || !Collapsed)
    {
        <div class="card-body">
            @Body
        </div>
    }

</div>

@code {

    [Parameter]
    public string Border { get; set; }

    [Parameter]
    public string BackgroundStyle { get; set; }

    [Parameter]
    public string HeaderStyle { get; set; }

    [Parameter]
    public RenderFragment Header { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public bool Collapsible { get; set; } = true;

    private static Dictionary<Type, bool> SavedCollapsedStateValues = new Dictionary<Type, bool>();
    private bool? _collapsed = null;
    protected bool Collapsed
    {
        get
        {
            if (_collapsed == null)
            {
                if (SavedCollapsedStateValues.ContainsKey(GetType()))
                {
                    _collapsed = SavedCollapsedStateValues[GetType()];
                }
                else
                {
                    _collapsed = false;
                }
            }

            return (bool)_collapsed;
        }
        set
        {
            if (_collapsed != value)
            {
                if (SavedCollapsedStateValues.ContainsKey(GetType()))
                {
                    SavedCollapsedStateValues.Remove(GetType());
                }

                SavedCollapsedStateValues.Add(GetType(), value);
                _collapsed = value;
                StateHasChanged();
            }
        }
    }
}
