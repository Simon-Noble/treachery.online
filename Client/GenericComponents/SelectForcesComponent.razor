<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared;

@if (Label != "")
{
    <label class="mt-1 align-content-center">@Label</label>
}

<NumberPickerComponent Disabled="@Disabled" Value="@Value" OnDown="OnDown" OnUp="OnUp" Min="Min" Max="Max" 
                       SymbolSRC="@ForceSymbolSRC" SymbolBackgroundFillColor="white" SymbolBackgroundBorderColor="black" 
                       NumberAlignment="NumberPickerAlignment.BottomRight" NumberBackgroundFillColor="white" NumberBackgroundBorderColor="black"/>

@code {

    private int _value;

    [Parameter]
    public int Value
    {
        get
        {
            return _value;
        }
        set
        {
            if (_value != value)
            {
                _value = value;
                ValueChanged.InvokeAsync(value);
                OnChanged?.Invoke();
            }
        }
    }

    [Parameter]
    public EventCallback<int> ValueChanged { get; set; }

    [Parameter]
    public Action OnChanged { get; set; }

    [Parameter]
    public EventCallback OnUp { get; set; }

    [Parameter]
    public EventCallback OnDown { get; set; }

    [Parameter]
    public int Min { get; set; }

    [Parameter]
    public int Max { get; set; }

    [Parameter]
    public string Label { get; set; } = "";

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public Faction Faction { get; set; } = Faction.None;

    [Parameter]
    public bool Special { get; set; } = false;

    private string ForceSymbolSRC => Special ? Skin.Current.GetFactionSpecialForceImageURL(Faction) : Skin.Current.GetFactionForceImageURL(Faction);
}
