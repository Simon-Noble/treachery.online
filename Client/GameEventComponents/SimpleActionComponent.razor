<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<GameEventType>
@typeparam GameEventType

@if (!dismissed)
{
    <GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle">

        <Header>@Title</Header>
        <Body>

            @if (Dismissable)
            {
                <ButtonRowComponent Confirm="Confirm" ConfirmText="@ConfirmLabel" ConfirmError="@validationError" Other="Dismiss" OtherText="@DismissLabel" />
            }
            else
            {
                <ButtonRowComponent Confirm="Confirm" ConfirmText="@ConfirmLabel" ConfirmError="@validationError" />
            }

        </Body>

    </GameEventComponentLayout>
}

@code {        
    
    protected override bool IsUrgent => Alert;

    private bool dismissed = false;

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string ConfirmLabel { get; set; } = "Ok";

    [Parameter]
    public bool Alert { get; set; }

    [Parameter]
    public bool Dismissable { get; set; } = false;

    [Parameter]
    public string DismissLabel { get; set; } = "Dismiss";

    [Parameter]
    public bool Collapsible { get; set; } = false;

    protected override GameEventType ConfirmedResult => new GameEventType() { Game = h.Game, Initiator = h.Faction };

    private void Dismiss()
    {
        dismissed = true;
    }
}

