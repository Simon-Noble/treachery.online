<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<TreacheryCalled>
@implements IDisposable

<div class="card p-1 mb-2 border-danger">
    <div class="card-header">Call TREACHERY?</div>
    <div class="card-body">

        @if (TreacheryCalled.MayCallTreachery(Game, Player))
        {
            <button class="btn btn-primary mt-1" @onclick="Confirm">Confirm</button>
            <div class="text-danger bg-dark">@validationError</div>
        }

        @if (Faction == Game.AggressorBattleAction.Initiator || Faction == Game.DefenderBattleAction.Initiator)
        {
            <button class="btn btn-primary mt-1" @onclick="Pass">Pass</button>
        }

    </div>
</div>

@code {

    protected override TreacheryCalled ConfirmedResult
    {
        get
        {
            return new TreacheryCalled(Game) { Initiator = Faction, TraitorCalled = true };
        }
    }

    protected override TreacheryCalled PassedResult
    {
        get
        {
            return new TreacheryCalled(Game) { Initiator = Faction, TraitorCalled = false };
        }
    }

    public void Dispose()
    {

    }

}