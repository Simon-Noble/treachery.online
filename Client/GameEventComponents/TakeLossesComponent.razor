<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<TakeLosses>

<div class="card p-1 mb-2 border-danger">

    <div class="card-header">
        Please choose how to distribute a storm loss total of at least @TakeLosses.LossesToTake(h.Game) over your forces in @TakeLosses.LossLocation(h.Game).
    </div>

    <div class="card-body">

        <label class="mb-0" for="shipmentForceAmount">@h.Player.ForceName</label>
        <select class="custom-select" @bind="forceAmount" id="shipmentForceAmount">
            @foreach (var s in TakeLosses.ValidForceAmounts(h.Game, h.Player))
            {
                <option value="@s">@s</option>
            }
        </select>

        @if (h.Player.HasSpecialForces)
        {
            <label class="mb-0" for="shipmentSpecialForceAmount">@(h.Player.SpecialForceName)</label>
            <select class="custom-select" @bind="specialForceAmount" id="shipmentSpecialForceAmount">
                @foreach (var s in TakeLosses.ValidSpecialForceAmounts(h.Game, h.Player))
                {
                    <option value="@s">@s</option>
                }
            </select>
        }

        <p>Total selected value: <span class="badge badge-primary badge-pill">@(forceAmount + specialForceAmount)</span></p>

        <div class="form-inline">
            <button class="btn btn-primary mr-1" @onclick="Confirm" disabled=@(!Valid)>Ok</button>
        </div>

        <div class="text-danger bg-dark">@validationError</div>

    </div>
</div>

@code {

    private int forceAmount;
    private int specialForceAmount;

    protected override TakeLosses ConfirmedResult
    {
        get
        {
            return new TakeLosses(h.Game)
            {
                Initiator = h.Faction,
                ForceAmount = forceAmount,
                SpecialForceAmount = specialForceAmount,
            };
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Initialize<int, int>(ref forceAmount, TakeLosses.ValidForceAmounts(h.Game, h.Player));
        Initialize<int, int>(ref specialForceAmount, TakeLosses.ValidSpecialForceAmounts(h.Game, h.Player));
    }
}
