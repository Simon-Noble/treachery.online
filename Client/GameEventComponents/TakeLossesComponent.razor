<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<TakeLosses>

<GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Please choose how to distribute a storm loss total of at least <strong>@TakeLosses.LossesToTake(Game).Amount</strong> over your forces in <strong>@TakeLosses.LossesToTake(Game).Location</strong></Header>
    <Body>

        @if (TakeLosses.ValidMaxForceAmount(Game, Player) > 0)
        {
            <SelectForcesComponent @bind-Value="forceAmount" Min="0" Max="TakeLosses.ValidMaxForceAmount(Game, Player)" Faction="Faction" Special="false" />
        }

        @if (TakeLosses.ValidMaxSpecialForceAmount(Game, Player) > 0)
        {
            <SelectForcesComponent @bind-Value="specialForceAmount" Min="0" Max="TakeLosses.ValidMaxSpecialForceAmount(Game, Player)" Faction="Faction" Special="true" />
        }

        <p>Total selected value: <span class="badge badge-primary badge-pill">@(forceAmount + specialForceAmount)</span></p>

        @if (Faction == Faction.Brown && TakeLosses.ValidUselessCardToPreventLosses(Game, Player) != null)
        {
            <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm" ConfirmError="@Validation" Other="Other" OtherText="@(UseUselessLabel)" />
        }
        else
        {
            <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm" ConfirmError="@Validation" />
        }

    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => true;

    private int forceAmount;
    private int specialForceAmount;

    protected override TakeLosses ConfirmedResult => new TakeLosses(Game) { Initiator = Faction, ForceAmount = forceAmount, SpecialForceAmount = specialForceAmount, UseUselessCard = false };

    protected override TakeLosses OtherResult => new TakeLosses(Game) { Initiator = Faction, ForceAmount = forceAmount, SpecialForceAmount = specialForceAmount, UseUselessCard = true };

    private string UseUselessLabel => Skin.Current.Format("Use {0}", TakeLosses.ValidUselessCardToPreventLosses(Game, Player));
}
