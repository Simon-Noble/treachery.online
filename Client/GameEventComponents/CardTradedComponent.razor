<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<CardTraded>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Trade one of your cards with your ally?</Header>
    <Body>

        <SelectCardComponent @bind-Value="card" Values="CardTraded.ValidCards(Player)" Required="true" />

        @if (Player.AlliedPlayer.IsBot)
        {
            <div class="mt-1">Because you're playing with a Bot, you may select one of their cards to receive in return:</div>
            <SelectCardComponent @bind-Value="returnCard" Values="CardTraded.ValidCards(Player.AlliedPlayer)" Required="false" />
        }

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Trade Card" ConfirmError="@Validation" />
    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => false;
    protected override Faction IsFactionSpecific => Faction.Brown;

    private TreacheryCard card;
    private TreacheryCard returnCard;

    protected override CardTraded ConfirmedResult => new CardTraded(Game) { Initiator = Faction, Target = Player.Ally, Card = card, RequestedCard = returnCard };
}
