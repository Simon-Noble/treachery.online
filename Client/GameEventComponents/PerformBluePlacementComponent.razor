<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<PerformBluePlacement>
@implements IDisposable

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Place one peaceful advisor in any territory of your choice. If you are alone in the territory, it is flipped to a fighter.</Header>
    <Body>

        <SelectComponent ButtonHint="ClickHintButton.LMB" @bind-Value="target" Values="PerformBluePlacement.ValidLocations(Game)">
            <Label>To</Label>
        </SelectComponent>

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm" ConfirmError="@Validation" />

    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => true;
    protected override Faction IsFactionSpecific => Faction.Blue;

    public Location target;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            h.OnLocationSelected += HandleLocationSelected;
        }
    }

    public override void Dispose()
    {
        base.Dispose();
        h.OnLocationSelected -= HandleLocationSelected;
    }

    protected override PerformBluePlacement ConfirmedResult => new PerformBluePlacement(Game) { Initiator = Faction, Target = target };

    private void HandleLocationSelected(object sender, Location l)
    {
        SetIfValid(ref target, Game.Map.Locations, l);
    }
}
