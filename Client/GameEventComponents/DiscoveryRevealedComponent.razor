<!--
* Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<DiscoveryRevealed>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle=@BodyStyle CollapsedType=GetType()>

    <Header>Reveal a Discovery?</Header>
    <Body>

        @{
            var locations = DiscoveryRevealed.GetLocations(Game, Player).ToList();

            if (locations.Count() > 1)
            {
                <SelectComponent @bind-Value="_selectedLocation" Values=@locations>
                    <Label>Where?</Label>
                 </SelectComponent>
            }

            if (_selectedLocation == null || !Game.DiscoveriesOnPlanet.ContainsKey(_selectedLocation)) 
                _selectedLocation = locations.First();
            
            <div>Reveal the <strong>@Name(Game.DiscoveriesOnPlanet[_selectedLocation].Token)</strong> in @Name(_selectedLocation.Territory)?</div>
            <div class="label-info">@Skin.Current.GetDiscoveryTokenDescription(Game.DiscoveriesOnPlanet[_selectedLocation].Token)</div>
        }

        <ButtonRowComponent Confirm="Confirm" ConfirmError=@Validation Pass="Pass" />

    </Body>

</GameEventComponentLayout>

@code {

    private Location _selectedLocation;

    protected override DiscoveryRevealed ConfirmedResult => new DiscoveryRevealed(Game, Faction) { Location = _selectedLocation };

    protected override DiscoveryRevealed PassedResult => new DiscoveryRevealed(Game, Faction) { Passed = true };
}
