<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<TerrorRevealed>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Resort to Terror against @Name(TerrorRevealed.GetVictim(Game)) in @Name(TerrorRevealed.GetTerritory(Game))?</Header>
    <Body>

        @if (TerrorRevealed.GetTypes(Game).Count() > 1)
        {
            <SelectComponent @bind-Value="_type" Values=@TerrorRevealed.GetTypes(Game)>
                <Label>Which kind of terror to use?</Label>
             </SelectComponent>
        }
        else
        {
            _type = TerrorRevealed.GetTypes(Game).First();
            <div>Use @Name(_type)?</div>
        }

        @if(_type == TerrorType.Robbery)
        {
            <RadioComponent @bind-Value="_robberyTakesCard" Values="@(new bool[] {false,true})" ValueLabels="@(new string[] {"Steal half their spice (rounded up)", "Draw a Treachery Card"})">
                <Label>Which kind of robbery?</Label>
            </RadioComponent>
        }
        else
        {
            _robberyTakesCard = false;
        }

        @if (_type == TerrorType.Sabotage)
        {
            <SelectCardComponent @bind-Value="_toGiveInSabotage" Values="Player.TreacheryCards" Required="false">
                <Label>You may select one of your treachery cards to give to them:</Label>
            </SelectCardComponent>
        }
        else
        {
            _toGiveInSabotage = null;
        }

        @if (_type == TerrorType.SneakAttack)
        {
            if (TerrorRevealed.ValidSneakAttackTargets(Game, Player).Any())
            {
                <SelectForcesComponent @bind-Value="_forcesInSneakAttack" Min="0" Max=@TerrorRevealed.MaxAmountOfForcesInSneakAttack(Game, Player) Faction=Faction Special=false Label="Amount of forces" />

                <SelectComponent ButtonHint="ClickHintButton.LMB" @bind-Value="_sneakAttackTo" Values="TerrorRevealed.ValidSneakAttackTargets(Game, Player)">
                    <Label>To</Label>
                </SelectComponent>
            }
            else
            {
                <div class="alert alert-danger mt-2">You cannot send forces there.</div>

                _forcesInSneakAttack = 0;
                _sneakAttackTo = null;
            }
        }
        else
        {
            _forcesInSneakAttack = 0;
            _sneakAttackTo = null;
        }

        @if (TerrorRevealed.MayOfferAlliance(Game))
        {
            <div>You may also offer them an alliance as an alternative to violence.</div>
        }

        @if (TerrorRevealed.MayPass(Game))
        {
            if (TerrorRevealed.MayOfferAlliance(Game))
            {
                <ButtonRowComponent Confirm="Confirm" ConfirmError=@Validation Pass="Pass" Other="Other" OtherText="Offer Alliance" />
            }
            else
            {
                <ButtonRowComponent Confirm="Confirm" ConfirmError=@Validation Pass="Pass" />
            }
        }
        else
        {
            <ButtonRowComponent Confirm="Confirm" ConfirmError=@Validation />
        }

    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => true;
    protected override Faction IsFactionSpecific => Faction.Cyan;

    private TerrorType _type;
    private bool _robberyTakesCard;
    private TreacheryCard _toGiveInSabotage;
    private int _forcesInSneakAttack;
    private Location _sneakAttackTo;

    protected override TerrorRevealed ConfirmedResult => new TerrorRevealed(Game) { Initiator = Faction, Type = _type, RobberyTakesCard = _robberyTakesCard, CardToGiveInSabotage = _toGiveInSabotage, ForcesInSneakAttack = _forcesInSneakAttack, SneakAttackTo = _sneakAttackTo };

    protected override TerrorRevealed PassedResult => new TerrorRevealed(Game) { Initiator = Faction, Passed = true };

    protected override TerrorRevealed OtherResult => new TerrorRevealed(Game) { Initiator = Faction, AllianceOffered = true };
}
