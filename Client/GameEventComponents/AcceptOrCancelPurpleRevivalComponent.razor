<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents; 
@inherits GameEventComponent<AcceptOrCancelPurpleRevival>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Manage Revival Requests</Header>

    <Body>

        @if (Game.CurrentPurpleRevivalRequest != null)
        {
            <div>@Skin.Current.Describe(Game.CurrentPurpleRevivalRequest.Initiator) have requested revival of <HeroComponent Game="Game" Value="Game.CurrentPurpleRevivalRequest.Hero" />. If you agree, set your price:</div>
            <SelectResourcesComponent @bind-Value="price" Min="AcceptOrCancelPurpleRevival.MinAmount()" Max="AcceptOrCancelPurpleRevival.MaxAmount()" />
            <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm offer" ConfirmError="@Validation" />
        }

        <hr style="border-color:white" />

        @if (CurrentRevivalOfferValues.Any())
        {
            <SelectComponent @bind-Value="hero" Values="CurrentRevivalOfferValues" ValueLabels="CurrentRevivalOfferLabels">
                <Label>Cancel an existing revival offer:</Label>
            </SelectComponent>
            <ButtonRowComponent Confirm="Pass" ConfirmText="Cancel offer" />
        }

    </Body>

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Purple;

    private IHero hero;
    private int price;

    protected override AcceptOrCancelPurpleRevival ConfirmedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = false, Hero = Game.CurrentPurpleRevivalRequest.Hero, Price = price };

    protected override AcceptOrCancelPurpleRevival PassedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = true, Hero = hero };

    private IEnumerable<IHero> CurrentRevivalOfferValues => Game.AllowedEarlyRevivals.Select(kvp => kvp.Key);

    private IEnumerable<string> CurrentRevivalOfferLabels => Game.AllowedEarlyRevivals.Select(kvp => Skin.Current.Format("{0} for {1}", kvp.Key, kvp.Value));

}
