<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents; 
@inherits GameEventComponent<AcceptOrCancelPurpleRevival>

<GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" Header="Manage Revival Requests" >

    @if (Game.CurrentPurpleRevivalRequest != null)
    {
        var hero = Game.CurrentPurpleRevivalRequest.Hero;
        <div>@Skin.Current.Describe(Game.CurrentPurpleRevivalRequest.Initiator) have requested revival of <span class="badge badge-primary badge-pill" style="@Color(hero.Faction)" data-animation="true" data-content="@Support.GetHeroHoverHTML(hero)" data-html="true" data-placement="top" data-trigger="hover" data-toggle="popover">@hero</span>. If you agree, set your price below.</div>

        <NumberPickerComponent @bind-Value="price" Min="AcceptOrCancelPurpleRevival.MinAmount()" Max="AcceptOrCancelPurpleRevival.MaxAmount()" SymbolSRC="@Skin.Current.Harvester_URL" />
        <button class="btn btn-primary" @onclick="Confirm" disabled=@(!Valid)>Confirm Offer</button>
    }

    @if (CurrentRevivalOfferValues.Any())
    {
        <SelectComponent @bind-Value="heroId" Values="CurrentRevivalOfferValues" ValueLabels="CurrentRevivalOfferLabels" Label="Cancel an existing revival offer:" />
        <button class="btn btn-primary" @onclick="Pass" disabled=@(!CurrentRevivalOfferValues.Contains(heroId))>Cancel Offer</button>
    }

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Purple;

    private int heroId;
    private int price;

    protected override void OnAfterRender(bool firstRender)
    {
        Initialize<int, int>(ref heroId, CurrentRevivalOfferValues);
    }

    protected override AcceptOrCancelPurpleRevival ConfirmedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = false, Hero = Game.CurrentPurpleRevivalRequest.Hero, Price = price };

    protected override AcceptOrCancelPurpleRevival PassedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = true, Hero = LeaderManager.HeroLookup.Find(heroId) };

    private IEnumerable<int> CurrentRevivalOfferValues => Game.AllowedEarlyRevivals.Select(kvp => kvp.Key.Id);

    private IEnumerable<string> CurrentRevivalOfferLabels => Game.AllowedEarlyRevivals.Select(kvp => Skin.Current.Format("{0} for {1}", kvp.Key, kvp.Value));

}
