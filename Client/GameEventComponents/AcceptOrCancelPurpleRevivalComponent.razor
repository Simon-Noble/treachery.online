<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents; 
@inherits GameEventComponent<AcceptOrCancelPurpleRevival>

<GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" >

    <Header>Manage Revival Requests</Header>

    <Body>

        @if (Game.CurrentPurpleRevivalRequest != null)
        {
            <div>@Skin.Current.Describe(Game.CurrentPurpleRevivalRequest.Initiator) have requested revival of <HeroComponent Value="Game.CurrentPurpleRevivalRequest.Hero" />. If you agree, set your price below.</div>
            <NumberPickerComponent @bind-Value="price" Min="AcceptOrCancelPurpleRevival.MinAmount()" Max="AcceptOrCancelPurpleRevival.MaxAmount()" SymbolSRC="@Skin.Current.Harvester_URL" NumberBackgroundBorderColor="#FF5400" />
            <button class="btn btn-primary" @onclick="Confirm" disabled=@(!Valid)>Confirm Offer</button>
        }

        @if (CurrentRevivalOfferValues.Any())
        {
            <SelectComponent @bind-Value="hero" Values="CurrentRevivalOfferValues" ValueLabels="CurrentRevivalOfferLabels">
                <Label>Cancel an existing revival offer:</Label>
            </SelectComponent>
            <button class="btn btn-primary" @onclick="Pass" disabled=@(!CurrentRevivalOfferValues.Contains(hero))>Cancel Offer</button>
        }

    </Body>

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Purple;

    private IHero hero;
    private int price;

    protected override void OnAfterRender(bool firstRender)
    {
        //Initialize<int, int>(ref heroId, CurrentRevivalOfferValues);
    }

    protected override AcceptOrCancelPurpleRevival ConfirmedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = false, Hero = Game.CurrentPurpleRevivalRequest.Hero, Price = price };

    protected override AcceptOrCancelPurpleRevival PassedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = true, Hero = hero };

    private IEnumerable<IHero> CurrentRevivalOfferValues => Game.AllowedEarlyRevivals.Select(kvp => kvp.Key);

    private IEnumerable<string> CurrentRevivalOfferLabels => Game.AllowedEarlyRevivals.Select(kvp => Skin.Current.Format("{0} for {1}", kvp.Key, kvp.Value));

}
