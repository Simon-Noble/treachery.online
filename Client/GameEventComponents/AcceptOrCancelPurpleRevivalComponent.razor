<!--
 * Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents; 
@inherits GameEventComponent<AcceptOrCancelPurpleRevival>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Manage Revival Requests</Header>

    <Body>

        @if (Game.CurrentRevivalRequests.Any())
        {
            <div>Early revival requests:</div>
            <SelectHeroComponent Game=Game Required=true @bind-Value=offerHero Values=@Game.CurrentRevivalRequests.Select(req => req.Hero) />
            <SelectResourcesComponent @bind-Value="price" Min="AcceptOrCancelPurpleRevival.MinAmount()" Max="AcceptOrCancelPurpleRevival.MaxAmount()" Label="Price" />
            <ButtonRowComponent Alignment="" Confirm="Confirm" ConfirmText=@OfferLabel Other=Other OtherText=@DenyLabel ConfirmError=@Validation />
        }

        @if (CurrentRevivalOfferValues.Any())
        {
            if (Game.CurrentRevivalRequests.Any())
            {
                <hr style="border-color:white" />
            }

            <div>Existing early revival offers:</div>
            <SelectHeroComponent Game=Game Required=true @bind-Value=cancelHero Values=@CurrentRevivalOfferValues />
            <ButtonRowComponent Alignment="" Confirm="Pass" ConfirmText=@CancelLabel />
        }

    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => Game.CurrentRevivalRequests.Any();

    protected override Faction IsFactionSpecific => Faction.Purple;

    private IHero offerHero;
    private int price;

    private IHero cancelHero;

    protected override AcceptOrCancelPurpleRevival ConfirmedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = false, Hero = offerHero, Price = price };

    protected override AcceptOrCancelPurpleRevival PassedResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = true, Hero = cancelHero };

    protected override AcceptOrCancelPurpleRevival OtherResult => new AcceptOrCancelPurpleRevival(Game) { Initiator = Faction, Cancel = false, Hero = offerHero, Price = int.MaxValue };

    private IEnumerable<IHero> CurrentRevivalOfferValues => Game.EarlyRevivalsOffers.Select(kvp => kvp.Key);

    private string OfferLabel => Skin.Current.Format("Offer {0} for {1}", offerHero, price); 

    private string DenyLabel => Skin.Current.Format("Deny revival of {0}", offerHero); 

    private string CancelLabel => Skin.Current.Format("Cancel offer for {0}", cancelHero); 
}
