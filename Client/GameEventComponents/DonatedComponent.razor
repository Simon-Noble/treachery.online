<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<Donated>

<GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Bribe @(Faction == Faction.Red?"any":"a non-allied") faction</Header>
    <Body>

        <SelectFactionComponent @bind-Value="target" Values="Donated.ValidTargets(Game, Player)" />

        <div class="mt-1">
            <SelectResourcesComponent @bind-Value="resources" Min="Donated.MinAmount(Game, Player)" Max="Donated.MaxAmount(Game, Player)" />
        </div>

        @if (Game.Applicable(Rule.CardsCanBeTraded))
        {
            <div class="mt-1">
                <SelectComponent @bind-Value="card" Values="Player.TreacheryCards" AddEmptyValue="true" EmptyLabel="None">
                    <Label>Give one of your cards</Label>
                </SelectComponent>
            </div>
        }

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm" ConfirmError="@Validation" />

    </Body>

</GameEventComponentLayout>

@code {

    private Faction target;
    private int resources;
    private TreacheryCard card;

    protected override Donated ConfirmedResult => new Donated(Game) { Initiator = Faction, Target = target, Resources = resources, Card = card };
}
