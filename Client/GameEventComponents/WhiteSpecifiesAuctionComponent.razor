@*
 * Copyright (C) 2020-2024 Ronald Ossendrijver (admin@treachery.online)
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This
 * program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have
 * received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.
*@

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<WhiteSpecifiesAuction>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle=@BodyStyle CollapsedType=GetType()>

    <Header>Define the auction</Header>
    <Body>

        @if (WhiteSpecifiesAuction.MaySpecifyCard(Game, Player))
        {
            <SelectFromImageComponent @bind-Value="card" Values="WhiteSpecifiesAuction.ValidCards(Game)" Required="true" ImageWidth="80" />
        }

        @if (WhiteSpecifiesAuction.MaySpecifyTypeOfAuction(Game, Player))
        {
            <RadioComponent @bind-Value="auctionType" Values="new AuctionType[] { AuctionType.WhiteOnceAround, AuctionType.WhiteSilent }" ValueLabels="@(new string[] { "Once Around", "Silent"})">
                <Label>Type of auction</Label>
            </RadioComponent>

            @if (auctionType == AuctionType.WhiteOnceAround)
            {
                <RadioComponent @bind-Value=direction Values="new int[] { 1, -1 }" ValueLabels="@(new string[] { "Counter-clockwise", "Clockwise"})">
                    <Label>Bidding direction</Label>
                </RadioComponent>
            }
        }

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Start Auction" ConfirmError=@Validation />

    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => true;

    protected override Faction IsFactionSpecific => Faction.White;

    private TreacheryCard card;
    private AuctionType auctionType = AuctionType.WhiteOnceAround;
    private int direction = 1;

    protected override WhiteSpecifiesAuction ConfirmedResult => new WhiteSpecifiesAuction(Game, Faction) { Card = card, AuctionType = auctionType, Direction = direction };
}
