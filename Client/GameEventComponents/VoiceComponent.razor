<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@using System.Linq;
@inherits GameEventComponent<Voice>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Use Voice</Header>
    <Body>

        @if (Game.CurrentBattle.IsInvolved(Faction.Green))
        {
            <div class="text-info small mb-2">Note: Voice should be used before Prescience.</div>
        }

        <RadioComponent @bind-Value="mustUse" Values="@(new bool[] {true,false})" ValueLabels="@(new string[] {"Force the use of...","Deny the use of..."})" />

        <SelectComponent @bind-Value="type" Values="ValidTypes" />

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Use Voice" ConfirmError="@Validation" />

    </Body>

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Blue;

    private bool mustUse = true;
    private TreacheryCardType type;

    protected override Voice ConfirmedResult => new Voice(Game) { Initiator = Faction, Must = mustUse, Type = type };

    private IEnumerable<TreacheryCardType> ValidTypes => Voice.ValidTypes(Game).OrderBy(t => Skin.Current.Describe(t));
}
