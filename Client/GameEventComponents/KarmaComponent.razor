<!--
 * Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<Karma>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle=@BodyStyle CollapsedType=GetType()>

    <Header>Use @Skin.Current.Describe(TreacheryCardType.Karma) to prevent a faction from using one of their advantages</Header>
    <Body>

        <SelectFromImageComponent @bind-Value="card" Values="Karma.ValidKarmaCards(Game, Player)" Required="true" ImageWidth="80" />

        <SelectComponent @bind-Value="prevented" Values="Karma.ValidFactionAdvantages(Game, Player)">
            <Label>Advantage to prevent <InfoComponent Contents="@InfoMessage" /></Label>
        </SelectComponent>

        <ButtonRowComponent Confirm="Confirm" ConfirmText="@Skin.Current.Format("Use {0}", TreacheryCardType.Karma)" ConfirmError=@Validation />

    </Body>

</GameEventComponentLayout>

@code {

    private TreacheryCard card;
    private FactionAdvantage prevented;

    protected override Karma ConfirmedResult => new Karma(Game) { Initiator = Faction, Card = card, Prevented = prevented };

    private string InfoMessage => "Prevention of an advantages with a * cannot be done automatically and must be done verbally between players. This might require an undo-action by the host after the action you want to prevent has occured.";
}
