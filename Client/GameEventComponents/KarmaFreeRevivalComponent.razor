<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<KarmaFreeRevival>

<GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Use @Skin.Current.Describe(TreacheryCardType.Karma) to revive forces or a leader</Header>
    <Body>

        @if (KarmaFreeRevival.ValidMaxAmount(Player, false) > 0)
        {
            <SelectForcesComponent @bind-Value="amountOfForces" Min="0" Max="KarmaFreeRevival.ValidMaxAmount(Player, false)" Faction="Faction" Special="false" />
        }
        else
        {
            amountOfForces = 0;
        }

        @if (KarmaFreeRevival.ValidMaxAmount(Player, true) > 0)
        {
            <SelectForcesComponent @bind-Value="amountOfSpecialForces" Min="0" Max="KarmaFreeRevival.ValidMaxAmount(Player, true)" Faction="Faction" Special="true" />
        }
        else
        {
            amountOfSpecialForces = 0;
        }

        <SelectHeroComponent @bind-Value="hero" Values="Game.ValidFreeRevivalHeroes(Player)" Required="false" />

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm" ConfirmError="@Validation" />

    </Body>

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Red;

    private int amountOfForces;
    private int amountOfSpecialForces;
    private IHero hero;

    protected override KarmaFreeRevival ConfirmedResult => new KarmaFreeRevival(Game) { Initiator = Faction, AmountOfForces = amountOfForces, AmountOfSpecialForces = amountOfSpecialForces, Hero = hero };
}
