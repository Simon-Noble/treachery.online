<!--
 * Copyright 2020-2022 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<JuicePlayed>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Use @Skin.Current.Describe(TreacheryCardType.Juice)?</Header>
    <Body>

        <RadioComponent @bind-Value="type" Values="JuicePlayed.ValidTypes(Game, Player)" Required="true"/>

        <ButtonRowComponent Confirm="Confirm" ConfirmText="@Skin.Current.Format("Use {0}", TreacheryCardType.Juice)" ConfirmError="@Validation" />

    </Body>

</GameEventComponentLayout>

@code {

    private JuiceType type;

    protected override void OnInitialized()
    {
        BackgroundImage = Support.GetCardImage(TreacheryCardType.Juice);
    }

    protected override JuicePlayed ConfirmedResult => new JuicePlayed(Game) { Initiator = Faction, Type = type };
}
