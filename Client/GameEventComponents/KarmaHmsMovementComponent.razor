<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<KarmaHmsMovement>
@implements IDisposable

<GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle" @bind-Collapsed="@Collapsed">

    <Header>Use @Skin.Current.Describe(TreacheryCardType.Karma) to move the Hidden Mobile Stronghold?</Header>
    <Body>

        <p class="text-info">You have @Game.KarmaHmsMovesLeft move(s) left. </p>

        <SelectComponent ButtonHint="ClickHintButton.LMB" @bind-Value="target" Values="KarmaHmsMovement.ValidLocations(Game)">
            <Label>To</Label>
        </SelectComponent>

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm" ConfirmError="@Validation" Pass="Pass" PassText="Pass" />

    </Body>

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Grey;

    public Location target;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            MapDrawer.OnLocationSelected += HandleLocationSelected;
        }
    }

    public void Dispose()
    {
        MapDrawer.OnLocationSelected -= HandleLocationSelected;
    }

    protected override KarmaHmsMovement ConfirmedResult => new KarmaHmsMovement(Game) { Initiator = Faction, Passed = false, Target = target };

    protected override KarmaHmsMovement PassedResult => new KarmaHmsMovement(Game) { Initiator = Faction, Passed = true };

    private void HandleLocationSelected(object sender, Location l)
    {
        SetIfValid(ref target, Game.Map.Locations, l);
    }
}
