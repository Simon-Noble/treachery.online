<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<ClairVoyanceAnswered>

<GameEventComponentLayout Border="@Border" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle="@BodyStyle">

    <Header>@Skin.Current.Describe(Game.LatestClairvoyance.Initiator) questions you with @Skin.Current.Describe(TreacheryCardType.Clairvoyance)!</Header>
    <Body>

        <div class="font-italic bg-dark">@Game.LatestClairvoyance.GetQuestion()</div>

        <ButtonRowComponent Confirm="Confirm" ConfirmText="Confirm" ConfirmError="@validationError" Pass="Pass" PassText="No" Other="Other" OtherText="I can't answer that..." />

    </Body>

</GameEventComponentLayout>

@code {

    protected override bool IsUrgent => true;

    protected override ClairVoyanceAnswered ConfirmedResult => new ClairVoyanceAnswered(Game) { Initiator = Faction, Answer = ClairVoyanceAnswer.Yes };

    protected override ClairVoyanceAnswered PassedResult => new ClairVoyanceAnswered(Game) { Initiator = Faction, Answer = ClairVoyanceAnswer.No };

    protected override ClairVoyanceAnswered OtherResult => new ClairVoyanceAnswered(Game) { Initiator = Faction, Answer = ClairVoyanceAnswer.Unknown };
}