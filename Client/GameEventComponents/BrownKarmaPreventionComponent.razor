<!--
 * Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<BrownKarmaPrevention>

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle=@BodyStyle CollapsedType=GetType()>

    <Header>Use @ToUse to prevent a faction from playing @Skin.Current.Describe(TreacheryCardType.Karma) this phase?</Header>

    <Body>
        <SelectFromImageComponent @bind-Value="target" Values="Game.PlayersOtherThan(Player)" Required=true ImageWidth="40" />
        <ButtonRowComponent Confirm="Confirm" ConfirmText="@Skin.Current.Format("Prevent use of {0}", TreacheryCardType.Karma)" ConfirmError=@Validation />
    </Body>

</GameEventComponentLayout>

@code { 

    protected override Faction IsFactionSpecific => Faction.Brown;

    protected override string Background => Skin.Current.GetImageURL(BrownKarmaPrevention.CardToUse(Player));

    private Faction target;

    protected override BrownKarmaPrevention ConfirmedResult => new BrownKarmaPrevention(Game) { Initiator = Faction, Target = target };

    private string ToUse => BrownKarmaPrevention.CardToUse(Player) != null ? Skin.Current.Describe(BrownKarmaPrevention.CardToUse(Player)) : "Nexus Cunning";
}
