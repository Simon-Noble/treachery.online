<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<FactionTradeOffered>
@implements IDisposable

<div class="card p-1 mb-2 @Border" style="@BackgroundStyle">
    <div class="card-header">Offer to trade factions</div>
    <div class="card-body">
        <select class="custom-select" @bind="target">
            @foreach (var f in h.Game.ValidTargets(h.Player))
            {
                <option value="@f">@Skin.Current.Describe(f)</option>
            }
        </select>

        <button class="btn btn-primary mt-1" @onclick="Confirm" disabled=@(!Valid)>Ok</button>
        <div class="text-danger bg-dark">@validationError</div>

    </div>
</div>

@code {

    private Faction target;

    protected override FactionTradeOffered ConfirmedResult
    {
        get
        {
            return new FactionTradeOffered(h.Game) { Initiator = h.Faction, Target = target };
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Initialize<Faction, Faction>(ref target, h.Game.ValidTargets(h.Player));
    }

    public void Dispose()
    {

    }

}