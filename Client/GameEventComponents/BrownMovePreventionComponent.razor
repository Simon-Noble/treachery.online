<!--
 * Copyright 2020-2023 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<BrownMovePrevention>
@implements IDisposable

<GameEventComponentLayout IsUrgent="@IsUrgent" BackgroundStyle="@BackgroundStyle" HeaderStyle="@HeaderStyle" BodyStyle=@BodyStyle CollapsedType=GetType()>

    <Header>Use @ToUse to prevent the current player from moving forces into a territory you occupy?</Header>

    <Body>

        <SelectComponent ButtonHint="ClickHintButton.LMB" @bind-Value="territory" Values="BrownMovePrevention.ValidTerritories(Player)">
            <Label>Territory</Label>
        </SelectComponent>
        
        <ButtonRowComponent Confirm="Confirm" ConfirmText="Prevent Move" ConfirmError=@Validation />

    </Body>

</GameEventComponentLayout>

@code {

    protected override Faction IsFactionSpecific => Faction.Brown;

    protected override string Background => Skin.Current.GetImageURL(BrownMovePrevention.CardToUse(Player));

    private Territory territory;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            h.OnLocationSelected += HandleLocationSelected;
        }
    }

     private void HandleLocationSelected(object sender, Location l)
    {
        SetIfValid<Territory, Territory>(ref territory, BrownMovePrevention.ValidTerritories(Player), l.Territory);
    }

    protected override BrownMovePrevention ConfirmedResult => new BrownMovePrevention(Game, Faction) { Territory = territory };

    public override void Dispose()
    {
        base.Dispose();
        h.OnLocationSelected -= HandleLocationSelected;
    }

    private string ToUse => BrownMovePrevention.CardToUse(Player) != null ? Skin.Current.Describe(BrownMovePrevention.CardToUse(Player)) : "Nexus Cunning";
}
