<!--
 * Copyright 2020-2021 Ronald Ossendrijver. All rights reserved.
--->

@using Treachery.Shared
@using Treachery.Client.GenericComponents;
@inherits GameEventComponent<RequestPurpleRevival>
@implements IDisposable

<div class="card p-1 mb-2 @Border" style="@BackgroundStyle">
    <div class="card-header">Request @Skin.Current.Describe(Faction.Purple) Revival of one of your leaders?</div>
    <div class="card-body">

        <SelectComponent @bind-Value="heroId" Values="RequestPurpleRevival.ValidTargets(Game, Player).Select(h => h.Id)" ValueLabels="RequestPurpleRevival.ValidTargets(Game, Player)" />

        <button class="btn btn-primary mt-1" @onclick="Confirm" disabled=@(!Valid)>Confirm</button>
        <div class="text-danger bg-dark">@validationError</div>

    </div>
</div>

@code {

    private int heroId;

    protected override void OnAfterRender(bool firstRender)
    {
        Initialize<int, IHero>(ref heroId, RequestPurpleRevival.ValidTargets(Game, Player));
    }

    public void Dispose()
    {

    }

    protected override RequestPurpleRevival ConfirmedResult
    {
        get
        {
            return new RequestPurpleRevival(Game) { Initiator = Faction, Hero = LeaderManager.HeroLookup.Find(heroId) };
        }
    }
}